什么是设计模式:
  设计模式是一种解决问题的方式，这种方式是经过无数次验证，有效的，通用的，都能够理解的一种方式.
 模式是最好的实践和设计的描述方法。它给普通的编程问题展示一个可变的解决方案。


为什么要使用设计模式?
  使我们的程序更容易使人能容易读。
  更容易维护代码
  更容易扩展
  优化代码结构
  优化项目架构
  减少代码的冗余
  设计模式也是oop 一种编程方式，增加代码的重用性



资源连接 单例模式：
  单例模式是为了解决资源的重复使用，在程序中始终保持只有一个资源对象

  单例模式的最经典的写法：将资源声明为静态，在产生新资源对象之前，首先判断该静态资源是否是一个对象，如果是，那么不需要产生新的资源 否则重新实例化


注册模式：

  注册模式是为了解决按需要实例化对象

工厂模式：
  工厂模式允许在运行的时间实例化一个对象。自从工厂模式命名以来，制造一个对象是可能的。

 其实：工厂模式就是使用工厂类代替new 实例化



mvc:
  c: 控制器 m：模型层 v： 视图层
 
  c:用于交互类：接收用户的请求，调用model取出数据--将数据返回给view


统一入口：
  

 public static function init(){  
        if(is_null(self::$db)){  
            self::$db = new mysql; 
             return self::$db;  
        }else{
             echo '已经实例化了';
        }
       
    } //单一模式


  
  
  


  