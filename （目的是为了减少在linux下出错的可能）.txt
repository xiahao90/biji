开发人员CHECKLIST
Checklist -> 所有开发人员<PHP, Mobile, UI>
1.	文件编码使用UTF-8无BOM格式
2.	缩进使用四个空格. 不要使用tab符号
3.	使用Unix换行符("\n"), 不要使用MSDOS("\r\n")或者OS9("\r")
4.	变量, 函数的命名使用驼峰法(lowerCamelCase)
5.	类的命名使用驼峰法(UpperCamelCase)
6.	常见的英语缩写使用大写(ID, HTML)
7.	常量的命名使用大写(UPPERCASE)
8.	true, false, null写成小写
9.	代码中SQL关键词必须大写
10.	使用变量前需要先定义
11.	使用数组中的元素需要先进行判断是否存在
12.	foreach循环前需要判断循环的变量是数组
13.	配置相关的变量需要放到配置文件中
14.	需要使用常量的时候, 不能硬编码(hardcode), 需要使用define定义在文件的开头
15.	写日志文件的操作需要可以通过开关控制, 上live后需要关闭不必要的日志
16.	删除注释代码
17.	不要加载没有使用的JS, CSS文件
18.	删除没有使用的资源文件, 如图片, JS, CSS等
19.	包含文件时需要注意文件的大小写
20.	如果是类文件, 需要保持类名和文件名一致(ie: 文件名 -> Util.class.php, 类名 -> Util)
21.	用户的密码不论存在数据库中还是文本中, 都不能明文存储, 并且需要使用加盐(salt)的方法加密存储
22.	支付信息(ie:信用卡, token)不能全部保存下来, ie: 信用卡号应该存成*********1234
23.	数据库字符集, collation需要使用utf8
24.	数据库的表名和字段名都不要使用SQL的关键词, 命名使用小写, 下划线分割的格式(lowercase_with_underscores)
25.	使用正确的表名, 字段名, ie: 表名, 字段名单复数一致, 不使用关键词作为表名及字段名
26.	在创建字段的时候, 选择正确的数据类型, ie: username varchar(32), 而不使用varchar(255)
27.	一般情况下一个表都应有一个自增主键
28.	尽量使用外键
29.	建立必要的索引
30.	在循环中尽量不要有SQL操作, 如果要使用请和leader确定
31.	在使用SQL查询时, 使用JOIN的, 而不使用IN来处理, 必须用IN的地方需要和leader确认
32.	在使用SQL查询时, 知道结果只返回一条数据的时, 不能使用while循环取数据
33.	不能直接拼接SQL语句, 需要使用预处理语句(prepared statement)
34.	不能使用预处理语句(prepared statement)时, 需要做验证或者过滤变量才能在SQL语句中使用
Checklist -> PHP开发 -> PHP
1.	使用"<?php", 不要使用"<?"短格式.省略"?>"关闭标签
2.	PHP的文件开头不要有空格或者空行
3.	在开发过程中, 错误提示需要设置为E_ALL, 所有错误提示都需要修复
4.	尽量做缓存，可使用memcached
5.	尽可能的使用PHP内部函数
6.	foreach效率更高, 尽量用foreach代替while和for循环
7.	用单引号替代双引号引用字符串
8.	使用$row['id'], 而不是$row[id], $row[’id’] 的速度是$row[id]的7倍
9.	如果能将类的方法定义成static，就尽量定义成static，它的速度会提升将近4倍
10.	注销那些不用的变量尤其是大数组，以便释放内存
11.	数据库连接当使用完毕时应关掉，不要用长连接
12.	在代码中, 要多次使用一个函数的返回值, 应该将函数的返回值赋给变量, 而不是重复调用该函数
13.	include文件时尽量使用绝对路径, 因为它避免了PHP去include_path里查找文件的速度, 解析操作系统路径所需的时间会更少
14.	对于循环里面用到的数据,都应该在循环外先取出来, 而不是在循环里去取
15.	多维数组尽量不要循环嵌套赋值
设计方法
原则：
- 高内聚,低耦合
- 要面向接口编程, 不要面向实现编程
- 少用继承，多用组合
- 开闭原则: 是说模块应对扩展开放，而对修改关闭。模块应尽量在不修改原(是"原"，指原来的代码)代码的情况下进行扩展

常用设计模式:
- 创建型模式：单例模式、抽象工厂模式、建造者模式、工厂模式、原型模式
- 结构型模式：适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式
- 行为型模式：模版方法模式、命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式、状态模式、策略模式、职责链模式、访问者模式

