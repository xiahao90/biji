使用img函数库必须打开gd2扩展：
 extension=php_gd2.dll

gd2函数库介绍：
gd_info函数：获取当前安装的GD库的信息　
getimagesize函数：获取图像的大小　
image_type_to_extension函数：获取图像类型的文件后缀　
image_type_to_mime_type函数：判断一个IMAGETYPE常量的MIME类型　
image2wbmp函数：以WBMP格式将图像输出到浏览器或文件　
imagealphablending函数：设定图像的混色模式　
imageantialias函数：是否使用antialias(抗锯齿)功能　
imagearc函数：画椭圆弧　
imagechar函数：水平地画一个字符　
imagecharup函数：垂直地画一个字符　
imagecolorallocate函数：为一幅图像分配颜色　
imagecolorallocatealpha 函数：为一幅图像分配颜色+alpha　
imagecolorat函数：获取某像素的颜色索引值　
imagecolorclosest函数：获取与指定颜色最接近的颜色的索引值　
imagecolorclosestalpha函数：获取与指定颜色加透明度最接近的颜色的索引值
imagecolorclosesthwb函数：获取与指定颜色最接近的色度的黑白色的索引　
imagecolordeallocate函数：取消图像颜色的分配　
imagecolorexact函数：获取指定颜色的索引值　
imagecolorexactalpha函数：获取指定颜色加透明度的索引值　
imagecolormatch函数：使一个图像中调色板版本的颜色与真彩色版本更能匹配
imagecolorresolve函数：获取指定颜色的索引值或有可能得到的最接近的替代值
imagecolorresolvealpha函数：获取指定颜色透明度的索引值或有可能得到的最接近的替代值　
imagecolorset函数：给指定调色板索引设定颜色　
imagecolorsforindex函数：获取某索引的颜色　
imagecolorstotal函数：获取一幅图像的调色板中颜色的数目　
imagecolortransparent函数：将某个颜色定义为透明色　
imageconvolution函数：申请一个3*3的卷积矩阵　
imagecopy函数：复制图像的一部分　
imagecopymerge函数：复制并合并图像的一部分　
imagecopymergegray函数：用灰度复制并合并图像的一部分
imagecopyresampled函数：重采样复制部分图像并调整大小
imagecopyresized函数：复制部分图像并调整大小
imagecreate函数：新建一个基于调色板的图像
imagecreatefromgd2函数：从GD 2文件或URL中新建一个图像　
imagecreatefromgd2part函数：从给定的GD 2文件或URL中的一部分新建一个图像
imagecreatefromgd函数：从GD文件或URL中新建一个图像
imagecreatefromgif函数：从GIF文件或URL中新建一个图像
imagecreatefromjpeg函数：从JPEG文件或URL中新建一个图像
imagecreatefrompng函数：从PNG文件或URL中新建一个图像
imagecreatefromstring函数：从字符串中的图像流新建一个图像
imagecreatefromwbmp函数：从WBMP文件或URL中新建一个图像
imagecreatefromxbm函数：从XBM文件或URL中新建一个图像
imagecreatefromxpm函数：从XPM文件或URL中新建一个图像
imagecreatetruecolor函数：新建一个真彩色图像
imagedashedline函数：画一条虚线
imagedestroy函数：销毁一个图像
imageellipse函数：画一个椭圆
imagefill函数：用指定颜色填充一个区域
imagefilledarc函数：画一个椭圆弧并填充
imagefilledellipse函数：画一个椭圆并填充
imagefilledpolygon函数：画一个多边形并填充
imagefilledrectangle函数：画一个矩形并填充
imagefilltoborder函数：区域填充到指定颜色的边界为止
imagefilter函数：对图像使用过滤器
imagefontheight函数：获取字体高度
imagefontwidth函数：获取字体宽度
imageftbbox函数：给出一个使用FreeType2字体的文本框
imagefttext函数：使用FreeType2字体将文本写入图像
imagegammacorrect函数：对GD图像应用gamma修正
imagegd2函数：将GD 2图像输出到浏览器或文件
imagegd函数：将GD图像输出到浏览器或文件
imagegif函数：以GIF格式将图像输出到浏览器或文件
imageinterlace函数：激活或禁止隔行扫描
imageistruecolor函数：检查图像是否为真彩色图像
imagejpeg函数：以JPEG格式将图像输出到浏览器或文件
imagelayereffect函数：设定alpha混色标志以使用绑定的libgd分层效果
imageline函数：画一条线段
imageloadfont函数：载入一个新字体
imagepalettecopy函数：将调色板从一幅图像复制到另一幅
imagepng函数：以PNG格式将图像输出到浏览器或文件
imagepolygon函数：画一个多边形
imagepsbbox函数：给出一个使用PostScript Type1字体的文本框
imagepsencodefont函数：改变字体中的字符编码矢量
imagepsextendfont函数：扩充或精简字体
imagepsfreefont函数：释放一个PostScript Type1字体所占用的内存
imagepsloadfont函数：从文件中加载一个PostScript Type1字体
imagepsslantfont函数：倾斜某字体
imagepstext函数：用PostScript Type1字体把文本字符串画在图像上
imagerectangle函数：画一个矩形
imagerotate函数：用给定角度旋转图像
imagesavealpha函数：设置标记以在保存PNG图像时保存完整的alpha通道信息
imagesetbrush 函数：设定画线用的画笔图像　
imagesetpixel函数：画一个单一的像素
imagesetstyle函数：设定画线的风格
imagesetthickness函数：设定画线的宽度
imagesettile函数：设定用于填充的贴图
imagestring函数：水平地画一行字符串　
imagestringup函数：垂直地画一行字符串
imagesx函数：获取图像宽度　
imagesy函数：获取图像高度　
imagetruecolortopalette函数：将真彩色图像转换为调色板图像　
imagettfbbox函数：取得使用TrueType字体的文本的范围
imagettftext函数：用TrueType字体向图像写入文本　
imagetypes函数：返回当前PHP版本所支持的图像类型
imagewbmp函数：以WBMP格式将图像输出到浏览器或文件
imagexbm函数：将XBM图像输出到浏览器或文件　
iptcembed函数：将二进制IPTC数据嵌入一幅JPEG图像中　
iptcparse函数：将二进制IPTC块解析为单个标记
jpeg2wbmp函数：将JPEG图像文件转换为WBMP图像文件
png2wbmp函数：将PNG图像文件转换为WBMP图像文件


实例应用：

文本图像:
<?php
header ('Content-type: image/png');//声明类型 
$im = @imagecreatetruecolor(120, 20) or die('Cannot Initialize new GD image stream');  //创建画布
$text_color = imagecolorallocate($im, 233, 14, 91);  //设置填充物颜色
imagestring($im, 1, 5, 5, 'A Simple Text String', $text_color);  //设置文本
imagepng($im);  //输出png图像
imagedestroy($im);  //销毁资源
?>

img解决中文
<?php
header('content-type: image/jpeg');
$img=imagecreatetruecolor(100,80);#设置图片大小
$color=imagecolorallocate($img,192,192,192);#设置图片的背景颜色
imagefill($img,0,0,$color);#填充图片的背景颜色
$font_color=imagecolorallocate($img,0,0,255);#设置字体颜色
$str='汉字';
imagettftext($img, 10, 0, 20, 30, $font_color, "simfang.ttf",$str); #中文是需要使用字体
imagejpeg($img1);#输出图片
imagedestroy($img1);#销毁资源
?>

添加水印：
<?php
header ('content-type: image/jpeg');
$waterstring="http://www.xrss.cn/";//水印字符串
$watertype=1;//加水印字符串   $watertype=2;//加水印图片
$filename='http://127.0.0.1/2013-2-22/2.jpg'; //源文件图片

$simage =imagecreatefromjpeg($filename);//读取源图像文件
$image_size = getimagesize($filename);//获取源图像宽度和高度 宽度:$image_size[0];   长度: $image_size[1];

$nimage=imagecreatetruecolor($image_size[0],$image_size[1]);//创建画布
$white=imagecolorallocate($nimage,255,255,255); //设置画布背景颜色
imagefill($nimage,0,0,$white);  //颜色填充

imagecopy($nimage,$simage,0,0,0,0,$image_size[0],$image_size[1]);  //图像合并

$black=imagecolorallocate($nimage,0,0,0); //设置填充字体颜色
switch($watertype){
    case 1:   //加水印字符串
        imagestring($nimage,2,3,$image_size[1]-15,$waterstring,$black);break;
    case 2:   //加水印图片
        $simage1 =imagecreatefromgif('mzone.gif');
        imagecopy($nimage,$simage1,0,0,0,0,85,15);
        imagedestroy($simage1);
    break;
}
imagejpeg($nimage);//输出图像
//销毁资源
imagedestroy($nimage);
imagedestroy($simage);
?>

缩略图：
<?php
//调整php分配内存大小，避免出现处理图像的内存不足
if(intval(ini_get('memory_limit')) <= 20){
ini_set('memory_limit','20M');
}

$imgfile='http://127.0.0.1/2013-2-22/2.jpg';
//获取图片信息
list($imgw, $imgh, $imgt, $attr) = getimagesize($imgfile);
//计算缩小的比例，目标最长边缩至150
$percent = $imgw>$imgh?(150/$imgw):(150/$imgh); //以最长边作为缩放参考
 if($percent<1){ //计算缩略图的新尺寸
            $new_width = floor($imgw*$percent);
            $new_height = floor($imgh*$percent);
        }else{ //如果原图尺寸小于 150x150 直接输出原图尺寸
            $new_width = $imgw;
            $new_height = $imgh;
}
$thumb=imagecreatetruecolor($new_width,$new_height);
 
//读取图片
 switch($imgt){ //判断格式，图像类型，但缩略图输出的都是jpg..参考下文
        case 1:
            $orgimg=imagecreatefromgif($imgfile);
        break;
        case 2:
            $orgimg=imagecreatefromjpeg($imgfile);
        break;
        case 3:
            $orgimg=imagecreatefrompng($imgfile);
        break;  
      }
      
header('Content-type: image/jpeg'); //指定header ，告诉浏览器输出的文件为jpg
//imagecopyresampled(缩略图片资源, 源图片资源, dx, dy, sx,sy, 新图像宽度, 新图像高度, 源图像宽度, 源图像高度);
imagecopyresampled($thumb, $orgimg, 0, 0, 0, 0, $new_width, $new_height, $imgw, $imgh); //缩放核心函数

imagejpeg($thumb,null,85); //输出图像
 //销毁资源   
imagedestroy($thumb);
imagedestroy($orgimg);
?>


图像剪切：图片剪切的原理同压缩原理相同
<?php
$filename='http://127.0.0.1/2013-2-22/2.jpg';
$wh=getimagesize($filename);//获取源图片的信息
$w=$wh[0]; //源图片宽度
$h=$wh[1];//源图片高度
$img_s = imagecreatefromjpeg($filename); //读取图片资源
$fenbianlv=$_REQUEST['tfbl'];
$img_d = ImageCreateTrueColor(60,$h);  //创建新图片
header('Content-type: image/jpeg');
imagecopy($img_d,$img_s,0,0,20,0,$w,$h); //将截取后的图片合并到新资源中
imagejpeg($img_d,null,100);
imagedestroy($img_s);
imagedestroy($img_d);
?>
